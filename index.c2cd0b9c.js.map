{"mappings":"AEAgB,SAAA,EAAT,CAAA,CAAA,CAAA,EACL,IAAM,EAAU,EAAE,CAYlB,MARA,AAFuB,AADN,IAAI,EAAU,QAAQ,CAAC,CACR,GAAG,CAAC,AAAC,GAAY,IAAI,EAAQ,QAAQ,CAAC,EAEvD,OAAO,CAAC,AAAC,IACtB,EAAK,OAAO,CAAC,AAAC,IACZ,IAAM,EAAQ,IAAI,EAAI,QAAQ,CAAC,CAE/B,EAAQ,IAAI,CAAC,CAAK,CAAC,EAAY,CACjC,EACF,GAEO,CACT,EDEA,AATA,SAA0B,CAAS,CAAE,CAAe,CAAE,CAAa,EACjE,IAAM,EAAa,AAAA,EAAU,EAQP,GALtB,AAFiB,AAAA,EAAU,EAOF,GALhB,OAAO,CAAC,CAAC,EAAM,KACtB,EAAK,KAAK,CAAC,CAAU,CAAC,EAAM,CAAC,SAAS,CAAC,CAAA,GACzC,EACF,EATc,SAAS,aAAa,CAAC,SAWb,EAAG","sources":["<anon>","src/scripts/main.js","src/scripts/helpers.js"],"sourcesContent":["/* eslint-disable no-console */ function $606493011af2be2c$export$c9dd4bee4ae86f53(dashboard, columnIndex) {\n    const columns = [];\n    const sections = [\n        ...dashboard.children\n    ];\n    const rowsInSections = sections.map((section)=>[\n            ...section.children\n        ]);\n    rowsInSections.forEach((rows)=>{\n        rows.forEach((row)=>{\n            const cells = [\n                ...row.children\n            ];\n            columns.push(cells[columnIndex]);\n        });\n    });\n    return columns;\n}\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$table = document.querySelector(\"table\");\nfunction $09e991522ca7e64e$var$changeColumsData(dashboard, fromColumnIndex, toColumnIndex) {\n    const columnFrom = (0, $606493011af2be2c$export$c9dd4bee4ae86f53)(dashboard, fromColumnIndex);\n    const columnTo = (0, $606493011af2be2c$export$c9dd4bee4ae86f53)(dashboard, toColumnIndex);\n    columnTo.forEach((cell, index)=>{\n        cell.after(columnFrom[index].cloneNode(true));\n    });\n}\n$09e991522ca7e64e$var$changeColumsData($09e991522ca7e64e$var$table, 1, 3);\n\n\n//# sourceMappingURL=index.c2cd0b9c.js.map\n","/* eslint-disable no-console */\n'use strict';\n\nimport { getColumn } from './helpers.js';\n\nconst table = document.querySelector('table');\n\nfunction changeColumsData(dashboard, fromColumnIndex, toColumnIndex) {\n  const columnFrom = getColumn(dashboard, fromColumnIndex);\n  const columnTo = getColumn(dashboard, toColumnIndex);\n\n  columnTo.forEach((cell, index) => {\n    cell.after(columnFrom[index].cloneNode(true));\n  });\n}\n\nchangeColumsData(table, 1, 3);\n","export function getColumn(dashboard, columnIndex) {\n  const columns = [];\n  const sections = [...dashboard.children];\n  const rowsInSections = sections.map((section) => [...section.children]);\n\n  rowsInSections.forEach((rows) => {\n    rows.forEach((row) => {\n      const cells = [...row.children];\n\n      columns.push(cells[columnIndex]);\n    });\n  });\n\n  return columns;\n}\n"],"names":["$606493011af2be2c$export$c9dd4bee4ae86f53","dashboard","columnIndex","columns","rowsInSections","sections","children","map","section","forEach","rows","row","cells","push","$09e991522ca7e64e$var$changeColumsData","fromColumnIndex","toColumnIndex","columnFrom","columnTo","cell","index","after","cloneNode","document","querySelector"],"version":3,"file":"index.c2cd0b9c.js.map"}