{"mappings":"C,A,WKAS,SAAA,EAAT,CAAA,CAAA,CAAA,EACQ,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,ACJX,SAA8B,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AGNxC,SAA4B,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AKJnE,SAAwC,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AIN1G,WACI,MAAM,AAAI,UAAU,uIACxB,GJKA,CDPO,SAAS,EAAU,CAAS,CAAE,CAAW,EAC9C,IAAM,EAAU,EAAE,CAYlB,OARA,AAFuB,AADL,AAAA,EAAG,EAAU,QAAQ,EACP,GAAG,CAAC,SAAC,CAArC,EAAkD,OAAA,AAAA,EAAG,EAAQ,QAAQ,C,GAEtD,OAAO,CAAC,SAAC,CAAxB,EACE,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAS,AAAA,EAAG,EAAI,QAAQ,EAE9B,EAAQ,IAAI,CAAC,CAAK,CAAC,EAAY,CACjC,EACF,GAEO,CACT,EDEA,AATA,SAA0B,CAAS,CAAE,CAAe,CAAE,CAAa,EACjE,IAAM,EAAa,AAAA,EAAU,EAQP,GALtB,AAFiB,AAAA,EAAU,EAOF,GALhB,OAAO,CAAC,SAAC,CAAA,CAAM,CAAxB,EACE,EAAK,KAAK,CAAC,CAAU,CAAC,EAAM,CAAC,SAAS,CAAC,CAAA,GACzC,EACF,EATc,SAAS,aAAa,CAAC,SAWb,EAAG,E","sources":["<anon>","src/scripts/main.js","src/scripts/helpers.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n/* eslint-disable no-console */ function $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\nfunction $f07f8edeb99d6764$export$c9dd4bee4ae86f53(dashboard, columnIndex) {\n    var columns = [];\n    var sections = (0, $227c6742e0ff6f82$export$71511d61b312f219)(dashboard.children);\n    var rowsInSections = sections.map(function(section) {\n        return (0, $227c6742e0ff6f82$export$71511d61b312f219)(section.children);\n    });\n    rowsInSections.forEach(function(rows) {\n        rows.forEach(function(row) {\n            var cells = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row.children);\n            columns.push(cells[columnIndex]);\n        });\n    });\n    return columns;\n}\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$table = document.querySelector(\"table\");\nfunction $197cd56b15c33885$var$changeColumsData(dashboard, fromColumnIndex, toColumnIndex) {\n    var columnFrom = (0, $f07f8edeb99d6764$export$c9dd4bee4ae86f53)(dashboard, fromColumnIndex);\n    var columnTo = (0, $f07f8edeb99d6764$export$c9dd4bee4ae86f53)(dashboard, toColumnIndex);\n    columnTo.forEach(function(cell, index) {\n        cell.after(columnFrom[index].cloneNode(true));\n    });\n}\n$197cd56b15c33885$var$changeColumsData($197cd56b15c33885$var$table, 1, 3);\n\n})();\n//# sourceMappingURL=index.7b6cd525.js.map\n","/* eslint-disable no-console */\n'use strict';\n\nimport { getColumn } from './helpers.js';\n\nconst table = document.querySelector('table');\n\nfunction changeColumsData(dashboard, fromColumnIndex, toColumnIndex) {\n  const columnFrom = getColumn(dashboard, fromColumnIndex);\n  const columnTo = getColumn(dashboard, toColumnIndex);\n\n  columnTo.forEach((cell, index) => {\n    cell.after(columnFrom[index].cloneNode(true));\n  });\n}\n\nchangeColumsData(table, 1, 3);\n","export function getColumn(dashboard, columnIndex) {\n  const columns = [];\n  const sections = [...dashboard.children];\n  const rowsInSections = sections.map((section) => [...section.children]);\n\n  rowsInSections.forEach((rows) => {\n    rows.forEach((row) => {\n      const cells = [...row.children];\n\n      columns.push(cells[columnIndex]);\n    });\n  });\n\n  return columns;\n}\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$f07f8edeb99d6764$export$c9dd4bee4ae86f53","dashboard","columnIndex","columns","rowsInSections","sections","children","map","section","forEach","rows","row","cells","push","$197cd56b15c33885$var$changeColumsData","fromColumnIndex","toColumnIndex","columnFrom","columnTo","cell","index","after","cloneNode","document","querySelector"],"version":3,"file":"index.7b6cd525.js.map"}